[{
	keyword: ["listbox", "lista", "scroll", "scorrimento"],
	nome: "Bracco Mattia",
	parte:[
		titolo: "Listbox",
		corpo: "Attraverso una listbox l’utente può visualizzare una tendina contenente diverse opzioni fra le quali può effettuare delle selezioni.",
		code: ["#4C\\sBracco\\sMattia\\s-\\sTKINTER\\sWidget\\slistbox\n\nimport\\stkinter\nfrom\\stkinter\\simport\\sttk\nfrom\\stkinter\\simport\\smessagebox\\sas\\smbox\n\nmioFont\\s=\\s('Arial,\\s16')\n\nclass\\sFinestra(tkinter.Tk):\n\t#Costruttore\n\tdef\\s__init__(self,\\snome):\n\t\tsuper().__init__()\n\t\tself.title(nome)\n\t\tself.geometry('660x1000')\n\t\tself.resizable(0,\\s0)\n\t\tself.crea_widgets()\n\t\n\t#CREA\\sWIDGETS\n\tdef\\screa_widgets(self):\n\t\tmf\\s=\\stkinter.Frame(self)\\s#Creo\\sl'oggetto\\sMain\\sFrame\\s(contenitore\\sprincipale),\\sci\\sdeve\\ssempre\\sessere\\se\\scontine\\si\\swidget\n\t\tmf.grid()\\s#Definisco\\sil\\slayout\\sdel\\sMain\\sFrame\\s(in\\squesto\\scaso\\s'grid')\n\t\t\n\t\t#LABEL\\sSELECTMODE\n\t\tlblSelectmode\\s=\\stkinter.Label(mf,\\stext='OPZIONI\\sPER\\sSELECTMODE')\n\t\tlblSelectmode.grid(row=0,\\scolumn=0,\\scolumnspan=4,\\ssticky=tkinter.EW)\n\t\t\n\t\t#LISTBOX\\sACCESSORI\\s(selectmode\\s=\\sbrowse)\n\t\t#Label\n\t\tlblBrowse\\s=\\stkinter.Label(mf,\\stext='BROWSE',\\sbg='blue')\n\t\tlblBrowse.grid(row=1,\\scolumn=0,\\ssticky=tkinter.EW)\n\t\t#Listbox\n\t\taccessori\\s=\\s('Pasta',\\s'Bistecca',\\s'Carne',\\s'Pesce',\\s'Patatine',\\s'Verdura',\\s'Contorno',\\s'Dolce')\n\t\tvarAccessori\\s=\\stkinter.Variable(value\\s=\\saccessori)\n\t\tlistAccessori\\s=\\stkinter.Listbox(mf,\\slistvariable=varAccessori,\\sheight=5,\\sselectmode=tkinter.BROWSE)\n\t\tlistAccessori.grid(row=2,\\scolumn=0)\n\t\t\n\t\t#LISTBOX\\sCIBI\\s(selectmode\\s=\\sextend)\n\t\t#Label\n\t\tlblBrowse\\s=\\stkinter.Label(mf,\\stext='EXTENDED',\\sbg='yellow')\n\t\tlblBrowse.grid(row=1,\\scolumn=1,\\ssticky=tkinter.EW)\n\t\t#Listbox\n\t\tcibi\\s=\\s('Pasta',\\s'Bistecca',\\s'Carne',\\s'Pesce',\\s'Patatine',\\s'Verdura',\\s'Contorno',\\s'Dolce')\n\t\tvarCibi\\s=\\stkinter.Variable(value\\s=\\scibi)\n\t\tlistCibi\\s=\\stkinter.Listbox(mf,\\slistvariable=varCibi,\\sheight=5,\\sselectmode=tkinter.EXTENDED)\n\t\tlistCibi.grid(row=2,\\scolumn=1)\n\t\t\n\t\t#LISTBOX\\sAUTO\\s(selectmode\\s=\\ssingle)\n\t\t#Label\n\t\tlblBrowse\\s=\\stkinter.Label(mf,\\stext='SINGLE',\\sbg='green')\n\t\tlblBrowse.grid(row=1,\\scolumn=2,\\ssticky=tkinter.EW)\n\t\t#Listbox\n\t\tauto\\s=\\s('Alfa\\sRomeo',\\s'Fiat',\\s'Ford',\\s'Ferrari',\\s'Lamborgini',\\s'Maserati',\\s'Audi',\\s'Mercedes',\\s'BMW',\\s'Lancia',\\s'Volvo',\\s'Seat',\\s'Kia')\n\t\tvarAuto\\s=\\stkinter.Variable(value\\s=\\sauto)\n\t\tlistAuto\\s=\\stkinter.Listbox(mf,\\slistvariable=varAuto,\\sheight=5,\\sselectmode=tkinter.SINGLE)\n\t\tlistAuto.grid(row=2,\\scolumn=2)\n\t\t\n\t\t#LISTBOX\\sCOLORI\\s(selectmode\\s=\\smultiple)\n\t\t#Label\n\t\tlblBrowse\\s=\\stkinter.Label(mf,\\stext='MULTIPLE',\\sbg='gray')\n\t\tlblBrowse.grid(row=1,\\scolumn=3,\\ssticky=tkinter.EW)\n\t\t#Listbox\n\t\tcolori\\s=\\s('Giallo',\\s'Azzurro',\\s'Blu',\\s'Verde',\\s'Marrone',\\s'Nero',\\s'Giallo',\\s'Mercedes',\\s'BMW',\\s'Lancia',\\s'Volvo',\\s'Seat',\\s'Kia')\n\t\tvarColori\\s=\\stkinter.Variable(value\\s=\\scolori)\n\t\tlistColori\\s=\\stkinter.Listbox(mf,\\slistvariable=varColori,\\sheight=5,\\sselectmode=tkinter.MULTIPLE)\n\t\tlistColori.grid(row=2,\\scolumn=3)\n\t\n\t\t#LABEL\\sSCROLLBAR\n\t\tlblScrollbar\\s=\\stkinter.Label(mf,\\stext='SCROLLBAR')\n\t\tlblScrollbar.grid(row=3,\\scolumn=0,\\scolumnspan=4,\\ssticky=tkinter.EW)\n\n\t\t#Listbox\n\t\tlinguaggi\\s=\\s('C#',\\s'C',\\s'C++',\\s'Python',\\s'Go',\\s'PHP',\\s'Swift',\\s'HTML',\\s'CSS',\\s'JSON',\\s'XML',\\s'JavaScript',\\s'Java')\n\t\tvarLinguaggi\\s=\\stkinter.Variable(value\\s=\\slinguaggi)\n\t\tlistLinguaggi\\s=\\stkinter.Listbox(mf,\\slistvariable=varLinguaggi,\\sheight=8,\\sselectmode=tkinter.BROWSE)\n\t\tlistLinguaggi.grid(row=4,\\scolumn=0)\n\t\t#Scrollbar\n\t\tscrollbar\\s=\\sttk.Scrollbar(mf,\\sorient=tkinter.VERTICAL,\\scommand=listLinguaggi.yview)\n\t\tlistLinguaggi['yscrollcommand']\\s=\\sscrollbar.set\n\t\tscrollbar.grid(row=4,\\scolumn=1,\\ssticky=tkinter.NS)\n\t\t\n\t\t#LABEL\\sOPERAZIONI\n\t\tlblOperazioni\\s=\\stkinter.Label(mf,\\stext='OPERAZIONI\\sSULLE\\sLISTE\\s(Vedere\\scodice)')\n\t\tlblOperazioni.grid(row=5,\\scolumn=0,\\scolumnspan=4,\\ssticky=tkinter.EW)\n\t\t\n\t\t#Listbox\\sdi\\spartenza\n\t\tnomi\\s=\\s('Alessio',\\s'Francesco',\\s'Pietro',\\s'Paolo',\\s'Giuseppe',\\s'Gabriele',\\s'Edoardo',\\s'Leonardo',\\s'Davide')\n\t\tvarNomi\\s=\\stkinter.Variable(value\\s=\\snomi)\n\t\tlistNomi\\s=\\stkinter.Listbox(mf,\\slistvariable=varNomi,\\sheight=8,\\sselectmode=tkinter.BROWSE)\n\t\tlistNomi.grid(row=6,\\scolumn=0)\n\t\t#Inserisco\\sun\\snome\\sin\\sposizione\\s0\\s('Mattia')\n\t\tlistNomi.insert(0,\\s'Mattia')\n\t\t#Elimino\\sil\\snome\\snella\\sposizione\\s2\\s('Francesco')\n\t\tlistNomi.delete(2)\n\t\t\n\t\t#LABEL\\sSELEZIONE\n\t\tlblSelezione\\s=\\stkinter.Label(mf,\\stext='VALORE\\sSELEZIONATO')\n\t\tlblSelezione.grid(row=7,\\scolumn=0,\\scolumnspan=4,\\ssticky=tkinter.EW)\n\n\t\t#Listbox\n\t\tsport\\s=\\s('Calcio',\\s'Pallavolo',\\s'Basket',\\s'Rugby',\\s'Tennis',\\s'Nuoto',\\s'Padel',\\s'Atletica')\n\t\tvarSport\\s=\\stkinter.Variable(value\\s=\\ssport)\n\t\tself.listSport\\s=\\stkinter.Listbox(mf,\\slistvariable=varSport,\\sheight=8,\\sselectmode=tkinter.BROWSE)\n\t\tself.listSport.grid(row=8,\\scolumn=0)\n\t\t#Button\n\t\tbtnConferma\\s=\\stkinter.Button(mf,\\stext='CONFERMA',\\scommand=self.stampaSelezione,\\sbg='lightgreen')\n\t\tbtnConferma.grid(row=8,\\scolumn=1)\n\t\t\n\t\t#BUTTON\\sESCI\n\t\tbtnEsci\\s=\\stkinter.Button(mf,\\stext='ESCI',\\scommand=self.destroy,\\sbg='red')\n\t\tbtnEsci.grid(row=9,\\scolumn=0,\\scolumnspan=4,\\ssticky=tkinter.EW)\n\t\t\n\t#STAMPA\\sSELEZIONE\n\tdef\\sstampaSelezione(self):\n\t\tfor\\si\\sin\\sself.listSport.curselection():\n\t\t\tprint(self.listSport.get(i))\n\t\t\tmbox.showinfo('Selezione',\\sself.listSport.get(i))\n\t\t\t\ndef\\smain():\n\tf\\s=\\sFinestra('Widget\\sListbox')\n\tf.mainloop()\nmain()\n"],
		prestetazione: "https://www.canva.com/design/DAFjQ92SnEc/yA9rRmbWWskjgwc2dvlilQ/view?website#2"
	]}				
],




[{
	keyword: ["checkbutton", "check", "button", "selezione", "scelta", "pulsante", "click"],
	nome: "De Boni Simone",
	parte:[
		titolo: "Checkbutton",
		corpo: "I checkbutton sono utilizzati per visualizzare una serie di opzioni all'utente come pulsanti di commutazione. Grazie a questo widget, della Tkinter, l'utente può selezionare una o più opzioni facendo clic sul pulsante corrispondente a ciascuna opzione.",
		code: [`#Presentazione - Checkbutton 
#De Boni Simone

import tkinter
from tkinter import messagebox
from functools import partial
import webbrowser

class Finestra(tkinter.Tk):
    def __init__(self, nome):
        super().__init__()
        self.title("Presentazione Checkbutton, "+nome)
        self.geometry("500x700")
        self.resizable(1,1)
        self.crea_widgets()

    def crea_widgets(self):
        titolo=tkinter.Frame()
        titolo.grid()
        titolo.configure(bg="lightgrey",padx=38)

        tit=tkinter.Label(titolo, text="CHECKBUTTON E PARAMETRI", font=("Arial", 15, "bold"), fg="grey", bg="lightgrey", height=2)
        tit.grid(row=0, column=0, columnspan=3, rowspan=3)


        mf=tkinter.Frame()
        mf.grid()
        self.configure(bg="lightgrey", padx=60, pady=10)
        mf.configure(bg="grey")

        self.check_lista=[]

        for i in range(17):
            self.scelta = tkinter.IntVar()
            self.check_lista.append(self.scelta)
            
        B1=tkinter.Checkbutton(mf, text="1-activebackground", variable=self.check_lista[0], activebackground="grey")
        #Attiva lo sfondo quando si clicca sul botton.
        B1.grid(row=0, column=0, sticky="w", columnspan=3, padx=10, pady=10)

        B2=tkinter.Checkbutton(mf, text="2-activeforeground", variable=self.check_lista[1], activeforeground="grey")
        #Attiva il colore del testo quando si clicca sul button
        B2.grid(row=1, column=0, sticky="we", padx=10, pady=10)

        B3=tkinter.Checkbutton(mf, text="3-bg", variable=self.check_lista[2], bg="grey")
        #Colorazione dello sfondo attiva quando non si clicca sul button.
        B3.grid(row=2, column=0, sticky="we", padx=10, pady=10)

        B4=tkinter.Checkbutton(mf, bitmap="error", variable=self.check_lista[3])
        #Immagine di messaggio di errore al posto del testo, può cambiare in base ai parametri.
        B4.grid(row=3, column=0, sticky="we", padx=10, pady=10)

        B5=tkinter.Checkbutton(mf, text="5-bd", variable=self.check_lista[4], bd=10)
        #Margine attorno ad ogni lato del button, di default vale 2 pixel.
        B5.grid(row=4, column=0, sticky="we", padx=10, pady=10)

        B6=tkinter.Checkbutton(mf, text="6-command", variable=self.check_lista[5], command=mf.master.destroy)
        #Consente di attivare metodi e funzioni al click del bottone.
        B6.grid(row=5, column=0, sticky="we", padx=10, pady=10)

        B7=tkinter.Checkbutton(mf, text="7-cursor", variable=self.check_lista[6], cursor="dot")
        #Cambia la forma del cursore al di sopra di questo button.
        B7.grid(row=6, column=0, sticky="we", padx=10, pady=10)

        B8=tkinter.Checkbutton(mf, text="8-font", variable=self.check_lista[7], font=("Arial", 15))
        #Font del testo.
        B8.grid(row=8, column=0, sticky="we", padx=10, pady=10)

        B9=tkinter.Checkbutton(mf, text="9-fg", variable=self.check_lista[8], fg="grey")
        #Colore del testo.
        B9.grid(row=9, column=0, sticky="we", padx=10, pady=10)

        B10=tkinter.Checkbutton(mf, text="10-height", variable=self.check_lista[9], height=5)
        #Altezza del button.
        B10.grid(row=10, column=0, sticky="we", padx=10, pady=10)

        B11=tkinter.Checkbutton(mf, text="11-image", variable=self.check_lista[10], command=partial(self.creaImmagine, mf))
        #Immagini come dei button grazie agli oggetti photoimage.
        B11.grid(row=0, column=1, sticky="we", padx=10, pady=10)

        B12=tkinter.Checkbutton(mf, text="12-justify \n altra riga", anchor="e", variable=self.check_lista[11], justify=tkinter.CENTER)
        #Se il testo contiene più righe, questa opzione controlla la giustificazione del testo: CENTRO, SINISTRA o DESTRA.
        B12.grid(row=1, column=1,sticky="we", padx=10, pady=10)

        B13=tkinter.Checkbutton(mf, text="13-relief", variable=self.check_lista[12], relief=tkinter.GROOVE)
        #Con il valore predefinito, relief=FLAT, il checkbutton non si distingue dal suo sfondo. Puoi impostare più stili.
        B13.grid(row=2, column=1, sticky="we", padx=10, pady=10)

        B14=tkinter.Checkbutton(mf, text="14-selectcolor", variable=self.check_lista[13], selectcolor="grey")
        #Il colore del checkbutton quando è impostato. L'impostazione predefinita è selectcolor="rosso".
        B14.grid(row=3, column=1,sticky="we", padx=10, pady=10)

        B15=tkinter.Checkbutton(mf, text="15-state", variable=self.check_lista[14], state=tkinter.DISABLED)
        #è possibile utilizzare state=DISABLED per disattivare il controllo e renderlo non rispondente.
        B15.grid(row=4, column=1, sticky="we", padx=10, pady=10)

        B16=tkinter.Checkbutton(mf, text="16-underline", variable=self.check_lista[15], underline=4)
        #Si può sottolineare un carattere oppure tutto iò testo del button.
        B16.grid(row=5, column=1, sticky="we", padx=10, pady=10)

        B17=tkinter.Checkbutton(mf, text="17-wraplength", variable=self.check_lista[16], wraplength=5)
        #suddividi in più righe anche testi di solo una parola.
        B17.grid(row=6, column=1, sticky="we", rowspan=5, padx=10, pady=10)
        #All'interno dei Checkbutton abbiamo il mainFrame, dove inseriremo il nostro widget,
        #il testo da associare ai pulsanti e la variabile,
        #che sarà proprio questa che permetterà di poter selezionare uno o più opzioni, grazie al suo valore
        #di tipo intero, che può essere 0 o 1 (0 non selezionato, 1 selezionato). 

        butt=tkinter.Button(mf, text="VERIFICA", command=self.Dispensa)
        butt.grid(row=11, column=0, columnspan=3, ipadx=30, ipady=10)


    def creaImmagine(self, mf):
        self.acceso = tkinter.PhotoImage(width=48, height=24)
        self.spento = tkinter.PhotoImage(width=48, height=24)
        self.acceso.put(("green",), to=(0, 0, 23,23))
        self.spento.put(("red",), to=(24, 0, 47, 23))
        #Creo i due oggetti PhotoImage e successivamente imposterò loro la grandezza,
        #il colore che devono assumere, e la loro posizione.

        self.var1 = tkinter.IntVar(value=1)
        self.var2 = tkinter.IntVar()
        cb1 = tkinter.Checkbutton(mf, image=self.spento, selectimage=self.acceso, indicatoron=False, variable=self.var1)
        cb2 = tkinter.Checkbutton(mf, image=self.spento, selectimage=self.acceso, indicatoron=False, variable=self.var2)
        cb1.grid(row=0, column=2, padx=20, pady=10)
        cb2.grid(row=1, column=2, padx=20, pady=10)
        #Creo i due checkbutton e grazie alle opzioni image e selectimage posso gestire le immagini
        #che verranno mostrate sia quando il button è selezionato sia quando non lo è...
        #grazie poi all'opzione indicatoron impostata a false posso gestire io l'indicatore della tkinter
        #senza che usi quello predefinito.

    def Dispensa(self):
        if self.check_lista[0].get()==0 and self.check_lista[1].get()==0 and self.check_lista[2].get()==0 and self.check_lista[3].get()==0 and self.check_lista[4].get()==0 and self.check_lista[6].get()==0 and self.check_lista[7].get()==0 and self.check_lista[8].get()==0 and self.check_lista[9].get()==0 and self.check_lista[10].get()==0 and self.check_lista[11].get()==0 and self.check_lista[12].get()==0 and self.check_lista[13].get()==0 and self.check_lista[15].get()==0 and self.check_lista[16].get()==0:
            webbrowser.open_new("https://www.canva.com/design/DAFfxoltwcg/O_sJAmSX29-pS-1xUnrVkw/edit?utm_content=DAFfxoltwcg&utm_campaign=designshare&utm_medium=link2&utm_source=sharebutton")
        else:
            selezionati = [i+1 for i, self.scelta in enumerate(self.check_lista) if self.scelta.get() == 1]
            #creo una nuova lista SELEZIONATI dove all'interno salvo un valore, ovvero l'indice della lista CHECK_LISTA increementato di uno, che corrisponde a ogni
            #elemento di tipo int var che ha valore==1.
            messagebox.showinfo("Checkbutton selezionati", f"Sono stati selezionati i checkbutton numero: {selezionati}")
            #stampo la lista che contiene i valori.

            #la funzione enumerate() fornisce l'indice e il valore di ciascun elemento di una lista o tupla ecc...
def main():
    f=Finestra("De Boni")
    f.mainloop()

main()
        `],
		prestetazione: "https://www.canva.com/design/DAFfxoltwcg/O_sJAmSX29-pS-1xUnrVkw/edit?utm_content=DAFfxoltwcg&utm_campaign=designshare&utm_medium=link2&utm_source=sharebutton"
	]}				
],
